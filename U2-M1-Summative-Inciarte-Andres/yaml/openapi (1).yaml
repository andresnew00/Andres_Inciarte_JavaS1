openapi: 3.0.0
info:
  title: Tasker Service Project - Andres Inciarte
  description: Tasker is a simple task-tracking web service.
  version: "1.0"
servers: 
- url: http://localhost:8080
  description: Local dev server
tags: 
- name: "Tasks"
  description: "Tasks provided routes"
- name: "Ad Server"
  description: "Ads provited routes"
  

# Tasks routes
paths:
  /tasks:
    get:
      tags:
      - "Tasks"
      summary: returns a list of all tasks.
      description: this will return all the tasks available in the database.
      parameters: []
      responses:
        '200':
          description: A JSON array of tasks.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/tasks'
  
    post:
      tags:
      - "Tasks"
      summary: creates a new task.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tasks'
      responses:
        '201':
          description: Created a new task.
          
    put:
      tags:
      - "Tasks"
      summary: updates an existing Task.
      description: updates a Task by id.
      parameters: 
        - name: id
          in: path
          required: true
          description: id of the task you would like to update.
          schema:
            type: integer
      responses:
        '200':
          description: Update task object from current id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tasks'
                  
  /tasks/{id}:
    get:
      tags:
      - "Tasks"
      summary: returns the task specified by the id.
      parameters: 
        - name: id
          in: path
          required: true
          description: id of the task you would like to get.
          schema:
            type: integer
      responses:
        '200':
          description: Task object from current id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tasks'
    
    delete:
      tags: 
      - "Tasks"
      summary: Deletes an existing task by id.
      description: deletes a task by id.
      parameters: 
        - name: id
          in: path
          required: true
          description: id of the task you would like to delete.
          schema:
            type: integer
      responses:
        '200':
          description: Get Task object from current id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tasks'
                
  /tasks/category/{category}:
    get:
      tags:
      - "Tasks"
      summary: returns the task specified by the category.
      parameters: 
        - name: category
          in: path
          required: true
          description: category of the task you would like to get.
          schema:
            type: string
      responses:
        '200':
          description: Task object from current category.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tasks'

# Ad service routes

  /ad:
    get:
      tags:
      - "Ad Server"
      summary: returns a list of all consoles.
      description: this will return all the consoles available in the database.
      parameters: []
      responses:
        '200':
          description: A JSON array of games.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/tasks'
  
components:
  schemas:
    tasks:
      type: object
      properties:
        id:
          type: integer
        description:
          type: string
        createDate:
          type: object
        dueDate:
          type: object
        category:
          type: string
        
        
